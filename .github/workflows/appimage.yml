name: Build AppImage SLAM Server

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      GCP_CREDENTIALS:
        required: true
      REPO_READ_TOKEN:
        required: true
      ARTIFACT_READ_ONLY_GCP_CREDENTIALS:
        required: true
  push:
    branches: main
    paths-ignore:
      - 'README.md'

env:
  GOPRIVATE: "github.com/viamrobotics/*,go.viam.com/*"
  GOOGLE_APPLICATION_CREDENTIALS_FILENAME: "google-credentials.json"

jobs:
  appimage:
    name: AppImage Build ORB_SLAM3
    strategy:
      matrix:
        include:
          - arch: [x64, qemu-host]
            image: ghcr.io/viamrobotics/canon:amd64-cache
            platform: linux/amd64
          - arch: [arm64, qemu-host]
            image: ghcr.io/viamrobotics/canon:arm64-cache
            platform: linux/arm64
    runs-on: ${{ matrix.arch }}
    container:
      image: ${{ matrix.image }}
      options: --platform ${{ matrix.platform }}
    timeout-minutes: 30

    steps:
    - name: Configure git for private repos
      run: |
        sudo -u testbot bash -lc 'echo "machine github.com login viambot password ${{ secrets.REPO_READ_TOKEN }}" > ~/.netrc'

    - name: Check out code in viam-orb-slam3 directory
      uses: actions/checkout@v3
      with:
        submodules: recursive
        path: viam-orb-slam3
   
    - name: Clean
      run: |
        chown -R testbot .
        sudo -u testbot bash -lc 'cd viam-orb-slam3 && make clean'
    
    - name: make bufinstall buf
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 5
        max_attempts: 3
        retry_on: timeout
        shell: bash
        command: |
          chown -R testbot .
          sudo -u testbot bash -lc 'cd viam-orb-slam3 && make bufinstall buf'

    - name: make setup
      run: |
        sudo -u testbot bash -lc 'cd viam-orb-slam3 && make setup'

    - name: make build
      run: |
        sudo -u testbot bash -lc 'cd viam-orb-slam3 && make build'

    - name: make test
      run: |
        sudo -u testbot bash -lc 'cd viam-orb-slam3 && make test'

    - name: Copy orb_grpc_server binary
      if: matrix.platform == 'linux/amd64'
      run: |
        sudo cp viam-orb-slam3/viam-orb-slam3/bin/orb_grpc_server /usr/local/bin/orb_grpc_server

    - name: Check out code in rdk directory
      if: matrix.platform == 'linux/amd64'
      uses: actions/checkout@v3
      with:
        repository: viamrobotics/rdk
        path: rdk

    - name: Create GCP Credential File from secret
      if: matrix.platform == 'linux/amd64'
      run: |
        GOOGLE_APPLICATION_CREDENTIALS=`pwd`/${GOOGLE_APPLICATION_CREDENTIALS_FILENAME}
        echo "${{ secrets.ARTIFACT_READ_ONLY_GCP_CREDENTIALS }}" >> ${GOOGLE_APPLICATION_CREDENTIALS}
        echo "GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}" >> $GITHUB_ENV

    - name: Run rdk slam integration tests
      if: matrix.platform == 'linux/amd64'
      run: |
        sudo --preserve-env=GOOGLE_APPLICATION_CREDENTIALS -u testbot bash -lc 'cd rdk/services/slam/builtin && sudo go test -v -run TestOrbslamIntegration'

    - name: Build appimage
      run: sudo -u testbot bash -lc 'cd viam-orb-slam3 && make BUILD_CHANNEL="latest" appimage'

    - name: Authorize GCP Upload
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    
    - name: Deploy Files
      uses: google-github-actions/upload-cloud-storage@v0.10.4
      with:
        headers: "cache-control: no-cache"
        path: 'viam-orb-slam3/etc/packaging/appimages/deploy/'
        destination: 'packages.viam.com/apps/slam-servers/'
        glob: '*'
        parent: false
        gzip: false
